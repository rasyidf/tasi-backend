// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TASI.Backend.Infrastructure.Database;

#nullable disable

namespace TASI.Backend.Migrations
{
    [DbContext(typeof(TasiContext))]
    partial class TasiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("TASI.Backend.Domain.Manufacture.Entities.ManufactureJob", b =>
                {
                    b.Property<int>("ManufactureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpectedCompletion")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExpectedProduce")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FinalProduce")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DATETIME('NOW')");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ManufactureId");

                    b.HasIndex("ProductId");

                    b.ToTable("Manufacture");
                });

            modelBuilder.Entity("TASI.Backend.Domain.Manufacture.Entities.ManufactureMaterial", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DATETIME('NOW')");

                    b.Property<int?>("OrderManufactureId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("MaterialId");

                    b.HasIndex("OrderManufactureId");

                    b.HasIndex("ProductId");

                    b.ToTable("ManufactureMaterial");
                });

            modelBuilder.Entity("TASI.Backend.Domain.Manufacture.Entities.ManufactureStatus", b =>
                {
                    b.Property<int>("ManufactureStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Code")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DATETIME('NOW')");

                    b.Property<int?>("OrderManufactureId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ManufactureStatusId");

                    b.HasIndex("OrderManufactureId");

                    b.ToTable("ManufactureStatus");
                });

            modelBuilder.Entity("TASI.Backend.Domain.Orders.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DATETIME('NOW')");

                    b.Property<int?>("PicUserUserId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalSales")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalShipping")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalTax")
                        .HasColumnType("TEXT");

                    b.Property<double>("TotalWeight")
                        .HasColumnType("REAL");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId");

                    b.HasIndex("PicUserUserId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TASI.Backend.Domain.Orders.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DATETIME('NOW')");

                    b.Property<int?>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("TEXT");

                    b.Property<double>("TotalWeight")
                        .HasColumnType("REAL");

                    b.Property<int>("Unit")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("TASI.Backend.Domain.Orders.Entities.OrderStatus", b =>
                {
                    b.Property<int>("OrderStatusHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Code")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DATETIME('NOW')");

                    b.Property<int?>("OrderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderStatusHistoryId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderStatus");
                });

            modelBuilder.Entity("TASI.Backend.Domain.Products.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Barcode")
                        .HasColumnType("TEXT");

                    b.Property<bool>("CanManufacture")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DATETIME('NOW')");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Unit")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("ProductId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TASI.Backend.Domain.Suppliers.Entities.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DATETIME('NOW')");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ShippingCost")
                        .HasColumnType("TEXT");

                    b.HasKey("SupplierId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("TASI.Backend.Domain.Users.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DATETIME('NOW')");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ShippingCost")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("FullName")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TASI.Backend.Domain.Manufacture.Entities.ManufactureJob", b =>
                {
                    b.HasOne("TASI.Backend.Domain.Products.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TASI.Backend.Domain.Manufacture.Entities.ManufactureMaterial", b =>
                {
                    b.HasOne("TASI.Backend.Domain.Manufacture.Entities.ManufactureJob", "Order")
                        .WithMany("Materials")
                        .HasForeignKey("OrderManufactureId");

                    b.HasOne("TASI.Backend.Domain.Products.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TASI.Backend.Domain.Manufacture.Entities.ManufactureStatus", b =>
                {
                    b.HasOne("TASI.Backend.Domain.Manufacture.Entities.ManufactureJob", "Order")
                        .WithMany("StatusHistory")
                        .HasForeignKey("OrderManufactureId");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("TASI.Backend.Domain.Orders.Entities.Order", b =>
                {
                    b.HasOne("TASI.Backend.Domain.Users.Entities.User", "PicUser")
                        .WithMany()
                        .HasForeignKey("PicUserUserId");

                    b.HasOne("TASI.Backend.Domain.Suppliers.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("PicUser");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("TASI.Backend.Domain.Orders.Entities.OrderDetail", b =>
                {
                    b.HasOne("TASI.Backend.Domain.Orders.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId");

                    b.HasOne("TASI.Backend.Domain.Products.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TASI.Backend.Domain.Orders.Entities.OrderStatus", b =>
                {
                    b.HasOne("TASI.Backend.Domain.Orders.Entities.Order", "Order")
                        .WithMany("StatusHistory")
                        .HasForeignKey("OrderId");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("TASI.Backend.Domain.Manufacture.Entities.ManufactureJob", b =>
                {
                    b.Navigation("Materials");

                    b.Navigation("StatusHistory");
                });

            modelBuilder.Entity("TASI.Backend.Domain.Orders.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("StatusHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
